#! /usr/bin/env python3
# create-app

import argparse
import os
import sys

# Converts str to absolute path
def toPath(str):
    return os.path.abspath(os.path.expanduser(str))

# Creates a file in current directory
def createFile(name):
    f = open(name, 'w+')
    f.close()

#  parses line into name, level and nameType
def parseLine(line):

    # Retrieves the name by removing the spaces
    name = ' '.join(line.split())

    # Determining level (no of parents from base directory)
    # by counting the number of spaces at the start of line
    level = len(line) - len(name) - 1

    # Determining the type of object. If first character of
    # name is + then it's a file else directory
    nameType = 'dir'
    if name[0] == '+':
        nameType = 'file'
        name = name[1:]

    return name, nameType, int(level)

# Prints error message and terminates the program
def echoError(msg):
    print(__file__, ': ', msg)
    os.exit(1)

# Parsing Arguments
arg_parser = argparse.ArgumentParser(description='Create a barebone app structure')

arg_parser.add_argument('-d', '--dest', help='Destination directory. If not specified, app will be created in ~ directory')
arg_parser.add_argument('-n', '--name', help='App name')

requiredArguments = arg_parser.add_argument_group('Required Arguments')
requiredArguments.add_argument('-s', '--structure', help='Path to app structure text file', required=True)

args = arg_parser.parse_args()

def main():

    # Check whether path to structure file is valid
    # if so open it else display error
    if os.path.isfile(toPath(args.structure)):
        structure = open(toPath(args.structure), 'r')
    else:
        echoError('Incorrect path to structure file')

    # If destination path is defined then change to
    # that directory else change to user's home directory
    if os.path.isdir(toPath(args.dest)):
        os.chdir(toPath(args.dest))
    else:
        os.chdir(toPath('~'))

    # If app's name is defined, create a directory with
    # that name and cd to it
    if args.name:
        os.makedir(toPath(args.name))
        os.chdir(toPath(args.name))

    try:
        lineNo = 1                  # Line number of structure file
        parent = ''                 # Parent of current directory
        curLevel = int(0)           # Current directory level

        for line in structure:

            # parsing the line into name, its type whether it's
            # a file or directory
            name, nameType, level = parseLine(line)

            # If level of object to be created is greater then
            # current level, it means it's child of current directory
            # that is parent directory
            if level > curLevel:

                # If parent is undefined, there must be some syntax
                # error in structure file
                if parent == '':
                    echoError('Error at line {0}\n{1}'.format(lineNo, line))

                # else change to that parent directory
                os.chdir(parent)

            # If level is less than current level then we need to
            # go up a directory
            elif level < curLevel:
                os.chdir('..')

            # Creating file object according to its type
            if nameType == 'file':
                createFile(name)
            elif not os.path.exists(name):
                os.mkdir(name)

            # Updating variables
            curLevel = level
            parent = name
            lineNo = lineNo + 1
    except Exception(e):
        echoError('Error at line {0}\n{1}'.format(lineNo, line))

if __name__ == '__main__':
    main()
